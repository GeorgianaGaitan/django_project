Creaza trei views in views.py care sa returneze browserului web cele trei pagini web "home.html", "register.html" si "books.html". Leaga-le de url-urile "home", "register" si "books"


Creaza o lista de books in views.py, care sa contina urmatoarele date:
book_titles = ["1984", "To Kill a Mockingbird", "The Great Gatsby", "Moby-Dick", "Pride and Prejudice"]

Folosindu-te de argumentul de context din functia render, trimite catre template-ul de books.html datele din book_titles, sa fie afisate utilizatorului.

Exemplu:
    return render(request, 'books.html', {
        "content": content
    })


Ex 22 Implementarea unui ViewSet pentru Pizza în Django REST

Creează modelul Pizza în fisierul models.py, care va conține următoarele câmpuri:

name: un șir de caractere (CharField)
pizza_type: un șir de caractere (CharField)
weight: un număr întreg (IntegerField) (grame)
size: un număr întreg (IntegerField) (cm)

Creează un serializer pentru modelul Pizza utilizând ModelSerializer, in serializers.py

Creează un ViewSet pentru modelul Pizza, similar cu BookCustomViewSet, permițând operațiuni CRUD (Create, Read, Update, Delete).

Inregistreaza acest ViewSet in router-ul default din urls.py, pe ruta "pizza"

Testează API-ul folosind Django Admin.
